# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: [3.7.3]

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2

    - name: Setup Conda
      uses: s-weigand/setup-conda@v1
      with:
          update-conda: true
          python-version: ${{ matrix.python-version }}
          conda-channels: anaconda, conda-forge
          
    - name: Log info
      run: |
        conda --version
        which python
        python -V

    - name: Install dependencies on ${{ matrix.os }}
      run: |
        conda config --set always_yes yes
        conda install -q -c anaconda pyyaml
        conda install -q -c anaconda numpy
        conda install -q -c anaconda scipy
        conda install -q -c anaconda pytest
        conda install -q -c conda-forge pytest-cov
        conda install -q -c anaconda flake8

    # - name: Lint with flake8
    #   run: |
        # stop the build if there are Python syntax errors or undefined names
        # flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        # flake8 . --count --exit-zero --max-complexity=10 --max-line-length=80 --statistics
    #    flake8 ggce
    
    - name: Unit tests
      if: ${{ always() }}
      # Coverage + pytest will automatically find the tests in the tests directory
      run: coverage run --source=ggce -m pytest tests

    - name: Code coverage
      if: ${{ always() }}
      uses: codecov/codecov-action@v1.0.11
      timeout-minutes: 10
      with:
        # Repository upload token - get it from codecov.io. Required only for private repositories
        token: ${{ secrets.CODECOV_SECRET }} 
        # Specify whether or not CI build should fail if Codecov runs into an error during upload
        fail_ci_if_error: false
        threshold: 1%
